plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    flavorDimensions "default"

    defaultConfig {
        applicationId "com.marvel.challenge"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {}
        debug {}
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue "string", "KEY_MARVEL_PUBLIC_KEY", "20c2be39ae8a5b2634053fc27ddb1262"
            resValue "string", "KEY_MARVEL_PRIVATE_KEY", "488c3339a50eea761172235150f66dadd15d2cd2"
            buildConfigField "okhttp3.logging.HttpLoggingInterceptor.Level", "LEVEL_LOGS", "okhttp3.logging.HttpLoggingInterceptor.Level.NONE"
            signingConfig signingConfigs.release
        }

        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue "string", "KEY_MARVEL_PUBLIC_KEY", "20c2be39ae8a5b2634053fc27ddb1262"
            resValue "string", "KEY_MARVEL_PRIVATE_KEY", "488c3339a50eea761172235150f66dadd15d2cd2"
            buildConfigField "okhttp3.logging.HttpLoggingInterceptor.Level", "LEVEL_LOGS", "okhttp3.logging.HttpLoggingInterceptor.Level.BODY"
        }
    }

    productFlavors {
        dev {
            applicationIdSuffix ".dev"
            buildConfigField "String", "HOST", "\" https://gateway.marvel.com:443/\""
        }
        pro {
            buildConfigField "String", "HOST", "\" https://gateway.marvel.com:443/\""
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

ext.supportVersion = "1.1.0"
ext.retrofitVersion = "2.6.0"
ext.okhttpVersion = "3.13.1"
ext.daggerVersion = "2.35.1"
ext.picassoVersion = "2.71828"
ext.junitVersion = "4.12"
ext.espressoVersion = "3.1.0-alpha4"
ext.mockWebServerVersion = "3.8.0"
ext.mockitoVersion = "3.2.4"
ext.dexOpenerVersion = "0.9.2"
ext.roboelectricVersion = "3.2"
ext.daggerMockVersion = "0.8.4"
ext.constraintlayoutVersion = "1.1.3"
ext.androidxSwipeRefreshVersion = "1.1.0"
ext.coroutinesVersion = "1.3.2"

dependencies {

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    //Support
    implementation "androidx.appcompat:appcompat:$supportVersion"
    implementation "com.google.android.material:material:$supportVersion"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    androidTestImplementation "androidx.annotation:annotation:$supportVersion"
    //ConstraintLayout
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$androidxSwipeRefreshVersion"
    //Picasso
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    // Dagger
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation("com.google.dagger:dagger:$daggerVersion") {
        exclude group: "com.android.support"
        exclude module: "appcompat-v7"
        exclude module: "support-v4"
    }
    // dagger android
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation("com.google.dagger:dagger-android-support:$daggerVersion") {
        exclude group: "com.android.support"
        exclude module: "appcompat-v7"
        exclude module: "support-v4"
    }
    //Retrofit OkHttp
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    // Required for local unit tests
    testImplementation "junit:junit:$junitVersion"
    // Required for instrumented tests
    androidTestImplementation("androidx.test.espresso:espresso-core:$espressoVersion") {
        exclude group: "com.android.support", module: "support-annotations"
    }
    androidTestImplementation("androidx.test.espresso:espresso-intents:$espressoVersion") {
        exclude group: "com.android.support", module: "support-annotations"
    }
    androidTestImplementation "com.github.fabioCollini:DaggerMock:$daggerMockVersion"
    // Test mockito
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    // Test MockWebServer
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion"
    // Test Roboelectric
    androidTestImplementation "androidx.test:runner:1.2.0"


    androidTestImplementation "com.github.tmurakami:dexopener:2.0.4"
}